name: CI

on:
  - push
  - pull_request

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install python3-pip tox

    - name: Lint code
      run: tox -e lint

  unit:
    name: Unit Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install python3-pip tox

    - name: Run unit tests
      run: tox -e unit

  deploy:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - uses: balchua/microk8s-actions@v0.2.2
      with:
        addons: '["dns", "storage", "rbac"]'
        channel: 1.20/stable

    # Remove once this is fixed:
    # https://github.com/actions/virtual-environments/issues/3185
    - name: Twiddle with MicroK8s
      run: |
        set -eux
        echo '--kubelet-preferred-address-types="InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP"' | sudo tee -a /var/snap/microk8s/current/args/kube-apiserver
        sudo snap restart microk8s
        sg microk8s -c 'microk8s status --wait-ready'
        kubectl -nkube-system rollout status ds/calico-node
        kubectl wait --for=condition=available -nkube-system deployment/coredns deployment/hostpath-provisioner

    - name: Install dependencies
      run: |
        set -eux
        sudo snap install charmcraft
        sudo snap install juju --classic
        sudo snap install juju-helpers --classic
        sudo snap install juju-wait --classic
        sudo snap install yq
        sudo apt-get install python3-pip tox

    - name: Bootstrap Juju
      run: |
        set -eux
        sg microk8s -c 'juju bootstrap microk8s uk8s'
        juju add-model ci-test

    - name: Deploy related charms
      run: |
        set -eux
        juju deploy cs:dex-auth
        juju deploy cs:istio-pilot
        juju wait -wvt 300

    - name: Deploy charm
      run: |
        set -eux
        tox -e build
        juju deploy ./*.charm \
          --resource oci-image=$(yq eval '.resources.oci-image.upstream-source' metadata.yaml)
        juju relate dex-auth:oidc-client oidc-gatekeeper:oidc-client
        juju relate istio-pilot:ingress dex-auth:ingress
        juju relate istio-pilot:ingress oidc-gatekeeper:ingress
        juju relate istio-pilot:ingress-auth oidc-gatekeeper:ingress-auth
        juju wait -wvt 300

    - name: Get all
      run: kubectl get all -A
      if: failure()

    - name: Get juju status
      run: juju status
      if: failure()

    - name: Get oidc-gatekeeper workload logs
      run: kubectl logs --tail 100 -nci-test -ljuju-app=oidc-gatekeeper
      if: failure()

    - name: Get oidc-gatekeeper operator logs
      run: kubectl logs --tail 100 -nci-test -ljuju-operator=oidc-gatekeeper
      if: failure()

    - name: Get dex-auth workload logs
      run: kubectl logs --tail 100 -nci-test -ljuju-app=dex-auth
      if: failure()

    - name: Get dex-auth operator logs
      run: kubectl logs --tail 100 -nci-test -ljuju-operator=dex-auth
      if: failure()

    - name: Get istio-pilot workload logs
      run: kubectl logs --tail 100 -nci-test -ljuju-app=istio-pilot
      if: failure()

    - name: Get istio-pilot operator logs
      run: kubectl logs --tail 100 -nci-test -ljuju-operator=istio-pilot
      if: failure()

